{"id":"01gz65eff6wfkf66bvtbt59c8s","item_id":"01gf87fcha7sg0a9134grxzh7q","add_time_ms":1682760482278,"hash":"492ecaa51f6038dbee2e5e68300ceff9","full_content":"滑块\n\n  wxSlider是一个具有简单把手的小部件。这个把手可以前后拉动。通过这种方式，我们可以为特定的任务选择一个值。有时使用滑块比简单地提供一个数字或使用旋钮控制更自然。\n\nSlider.h\n\n    #include <wx/wx.h>\n    #include <wx/slider.h>\n    \n    class MyPanel : public wxPanel\n    {\n    public:\n     MyPanel(wxFrame *parent);\n     void OnPaint(wxPaintEvent& event);\n     void OnScroll(wxScrollEvent& event);\n     wxSlider *slider;\n     int fill;\n    };\n    class Slider : public wxFrame\n    {\n    public:\n     Slider(const wxString& title);\n     MyPanel *panel;\n    };\n    const int ID_SLIDER = 100;\n    \n    \nSlider.cpp\n\n    #include \"Slider.h\"\n    Slider::Slider(const wxString& title)\n     : wxFrame(NULL, wxID_ANY, title, wxDefaultPosition, \n     wxSize(270, 200))\n    {\n     panel = new MyPanel(this);\n     Center();\n    }\n    MyPanel::MyPanel(wxFrame * parent)\n     : wxPanel(parent, wxID_ANY)\n    {\n     fill = 0;\n     slider = new wxSlider(this, ID_SLIDER, 0, 0, 140, wxPoint(50, 30), \n     wxSize(-1, 140), wxSL_VERTICAL);\n     Connect(ID_SLIDER, wxEVT_COMMAND_SLIDER_UPDATED, \n     wxScrollEventHandler(MyPanel::OnScroll)); \n     Connect(wxEVT_PAINT, wxPaintEventHandler(MyPanel::OnPaint));\n    }\n    void MyPanel::OnScroll(wxScrollEvent& event)\n    {\n     fill = slider->GetValue();\n     Refresh();\n    }\n    void MyPanel::OnPaint(wxPaintEvent& event)\n    {\n     wxPaintDC dc(this);\n     wxPen pen(wxColour(212, 212, 212));\n     dc.SetPen(pen);\n     dc.DrawRectangle(wxRect(140, 30, 80, 140)); \n     wxBrush brush1(wxColour(197, 108, 0));\n     dc.SetBrush(brush1);\n     dc.DrawRectangle(wxRect(140, 30, 80, fill));\n    }\n    \nmain.h\n\n    #include <wx/wx.h>\n    class MyApp : public wxApp\n    {\n     public:\n     virtual bool OnInit();\n    };\n    \nmain.cpp\n\n    #include \"main.h\"\n    #include \"Slider.h\"\n    IMPLEMENT_APP(MyApp)\n    bool MyApp::OnInit()\n    {\n     Slider *slider = new Slider(wxT(\"Slider\"));\n     slider->Show(true);\n     return true;\n    }\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(slider)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(\n            ${PROJECT_NAME}\n            main.cpp main.h\n            slider.cpp slider.h)\n    \n    set_target_properties(\n            ${PROJECT_NAME}\n            PROPERTIES\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n            WIN32_EXECUTABLE true\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n","_id":"32"}