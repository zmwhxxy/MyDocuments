{"id":"01g8n8m31y4d4pjsrkkepkx9yc","add_time_ms":1658571066430,"icon":"book","type":"doc","title":"工具栏","_id":"20","content":"单工具栏\n\n   我们的第一个示例将创建一个简单的工具栏。\n\nToolbarFrame.h\n\n    #ifndef TOOLBAR_TOOLBARFRAME_H\n    #define TOOLBAR_TOOLBARFRAME_H\n    \n    #include \"wx/wx.h\"\n    \n    class ToolbarFrame : public wxFrame {\n    public:\n        ToolbarFrame(const wxString& title);\n        void OnQuit(wxCommandEvent& event);\n    };\n    \n    \n    #endif //TOOLBAR_TOOLBARFRAME_H\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \n\n\nToolbarFrame.cpp\n\n    #include \"ToolbarFrame.h\"\n    \n    ToolbarFrame::ToolbarFrame(const wxString &title)\n        :wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(300, 250))\n    {\n        wxImage::AddHandler(new wxPNGHandler);\n        wxBitmap exit(wxT(\"exit.png\"), wxBITMAP_TYPE_PNG);\n    \n        wxToolBar* toolbar = this->CreateToolBar();\n        toolbar->AddTool(wxID_EXIT, wxT(\"Exit application\"), exit);\n        toolbar->Realize();\n    \n        this->Connect(wxID_EXIT, wxEVT_COMMAND_TOOL_CLICKED, wxCommandEventHandler(ToolbarFrame::OnQuit));\n    }\n    \n    void ToolbarFrame::OnQuit(wxCommandEvent &event) {\n        this->Close(true);\n    }\n\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nmain.h\n\n    #ifndef TOOLBAR_MAIN_H\n    #define TOOLBAR_MAIN_H\n    \n    #include \"wx/wx.h\"\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //TOOLBAR_MAIN_H\n\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nmain.cpp\n\n    #include \"main.h\"\n    #include \"ToolbarFrame.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        ToolbarFrame* frame = new ToolbarFrame(wxT(\"Toolbar\"));\n        frame->Show(true);\n    \n        return true;\n    }\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(Toolbar)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(\n            ${PROJECT_NAME}\n            main.cpp main.h ToolbarFrame.cpp ToolbarFrame.h)\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n        set_property(\n                TARGET ${PROJECT_NAME} PROPERTY\n                WIN32_EXECUTABLE true\n        )\n    endif ()\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n\n运行效果:\n![image.png]({$WP_ASSETS}/c6fee0fe1f0a708183351c4f36822578.png)\n\n\n\n\n  多工具栏\n\n下面的示例演示了多工具栏窗口:\n\n需要的图片资源:\nnew.png\n![new.png]({$WP_ASSETS}/e4ec771017038d04deb21ad64c0d3e6c.png)\n\nopen.png\n![open.png]({$WP_ASSETS}/1c325599950944c010e74b68bf54e169.png)\n\nsave.png\n![save.png]({$WP_ASSETS}/134c83f731f26507d16eefb57b14e1a4.png)\n\nexit.png\n![exit.png]({$WP_ASSETS}/d1c8011282482743b29aef6f5182ad7b.png)\n\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(Toolbars)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(\n            ${PROJECT_NAME}\n            main.cpp main.h ToolbarFrame.cpp ToolbarFrame.h)\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n        set_property(\n                TARGET ${PROJECT_NAME} PROPERTY\n                WIN32_EXECUTABLE true\n        )\n    endif ()\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nToolbarsFrame.h\n\n    #ifndef TOOLBARS_TOOLBARSFRAME_H\n    #define TOOLBARS_TOOLBARSFRAME_H\n    \n    #include \"wx/wx.h\"\n    \n    class ToolbarsFrame : public wxFrame {\n    public:\n        ToolbarsFrame(const wxString& title);\n        void OnQuit(wxCommandEvent& event);\n    \n    private:\n        wxToolBar* toolbar1;\n        wxToolBar* toolbar2;\n    };\n\n\n    #endif //TOOLBARS_TOOLBARSFRAME_H\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nToolbarsFrame.cpp\n\n    #include \"ToolbarsFrame.h\"\n    \n    ToolbarsFrame::ToolbarsFrame(const wxString &title)\n        :wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(300, 250))\n    {\n        wxImage::AddHandler(new wxPNGHandler);\n    \n        wxBitmap exit(wxT(\"exit.png\"), wxBITMAP_TYPE_PNG);\n        wxBitmap newb(wxT(\"new.png\"), wxBITMAP_TYPE_PNG);\n        wxBitmap open(wxT(\"open.png\"), wxBITMAP_TYPE_PNG);\n        wxBitmap save(wxT(\"save.png\"), wxBITMAP_TYPE_PNG);\n    \n        wxBoxSizer* vbox = new wxBoxSizer(wxVERTICAL);\n    \n        toolbar1 = new wxToolBar(this, wxID_ANY);\n        toolbar1->AddTool(wxID_ANY, wxT(\"New\"), newb);\n        toolbar1->AddTool(wxID_ANY, wxT(\"Open\"), open);\n        toolbar1->AddTool(wxID_ANY, wxT(\"\"), save);\n        toolbar1->Realize();\n    \n        toolbar2 = new wxToolBar(this, wxID_ANY);\n        toolbar2->AddTool(wxID_EXIT, wxT(\"Exit application\"), exit);\n        toolbar2->Realize();\n    \n        vbox->Add(toolbar1, 0, wxEXPAND);\n        vbox->Add(toolbar2, 0, wxEXPAND);\n    \n        this->SetSizer(vbox);\n    \n        this->Connect(wxID_EXIT, wxEVT_COMMAND_TOOL_CLICKED, wxCommandEventHandler(ToolbarsFrame::OnQuit));\n    }\n    \n    void ToolbarsFrame::OnQuit(wxCommandEvent &event) {\n        this->Close(true);\n    }\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nmain.h\n\n    #ifndef TOOLBARS_MAIN_H\n    #define TOOLBARS_MAIN_H\n    \n    #include <wx/wx.h>\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //TOOLBARS_MAIN_H\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \nmain.cpp\n\n    #include \"main.h\"\n    #include \"ToolbarsFrame.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        ToolbarsFrame* frame = new ToolbarsFrame(wxT(\"Toolbars\"));\n        frame->Show(true);\n    \n        return true;\n    }\n\n\n运行效果:\n![image.png]({$WP_ASSETS}/64bebff5fd3694752333ed701be89d3a.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","edit_time_ms":1658579878611,"snapshots":[],"char_count":{"word":481,"char_without_spaces":7118,"char_with_spaces":9310}}