{"id":"01h9mtk2gt2g28vvcttnfnzfcm","add_time_ms":1693989833242,"icon":"book","type":"doc","title":"Cocos Editor","_id":"64","char_count":{"word":358,"char_without_spaces":1493,"char_with_spaces":1774,"char_all":1836},"content":"注意:头文件必须包含:cocos2d.h 和wx.h;并且cocos2d.h必须放在第一个位置.否则会出现gl.h报错和size_t类型重复定义等问题.\n\n工程文件为:*.fb\n数字栏:(51,51,51)\n编辑器背景(31,31,31)\n\nGLView::updateDesignResolutionSize() :change _scaleX _scaleY\n GLView::setDesignResolutionSize()->updateDesignResolutionSize()\n \n \n ==========================================================================================================\n \n \n 注意:cocos2dx-4.x版的引擎\n luabing 相关的模块有内存泄漏\n \n //注意:CCConsole.cpp文件中的函数调用到了 getWin32Window函数,需要对该函数进行重写:\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)\n    void SendLogToWindow(const char *log)\n    {\n        // Send data as a message\n        COPYDATASTRUCT myCDS;\n        myCDS.dwData = 1;\n        myCDS.cbData = (DWORD)strlen(log) + 1;\n        myCDS.lpData = (PVOID)log;\n        if (Director::getInstance()->getOpenGLView()) {\n            HWND hwnd = Director::getInstance()->getOpenGLView()->getWin32Window();\n            SendMessage(hwnd,\n                WM_COPYDATA,\n                (WPARAM)(HWND)hwnd,\n                (LPARAM)(LPVOID)&myCDS);\n\n        }\n    }\n#endif\n \n1. Director::init()内存泄漏,多次调用 创建其他对象.\n \n 退出程序后,  button, glprogram, programgL sprite调用了内存析构函数,\n \n2. 内存泄漏:  DeviceGL没有调用内存析构函数.\n3. \n4. Renderer 内存泄漏\n \n 5.ScriptEngineManager::instance()在destroyInstance后仍然多次调用,导致内存泄漏严重.\n原因:是内存自动管理器:  \nRef::~Ref(){\nScriptEngineProtocol* pEngine = ScriptEngineManager::getInstance()->getScriptEngine();\n}的派生类不断调用该函数进行释放内存导致.释放的对象又被重新创建\n\n 6.\n  ShaderModule* DeviceGL::newShaderModule(ShaderStage stage, const std::string& source)\n  {\n     这里new了一个对象,没有放到自动释放池.导致严重的内存泄漏, 在此出添\n      return new (std::nothrow) ShaderModuleGL(stage, source);\n  } \n  改写为:\n     ShaderModule* DeviceGL::newShaderModule(ShaderStage stage, const std::string& source)\n    {\n      auto ret = new (std::nothrow) ShaderModuleGL(stage, source);\n      if(ret){ret->autorelease();}\n      return ret;\n    }  ","edit_time_ms":1697365403124}