{"id":"01germsgz6s55najkqnn70tqsn","add_time_ms":1665126941670,"icon":"book","type":"doc","title":"wxFlexGridSizer","_id":"47","content":"wxFlexGridSizer\n\n这个size类似于wxgridsize。它也在一个二维表中布局它的小部件。它增加了一些灵活性。wxGridSizer单元格的大小相同。wxFlexGridSizer中的所有单元格在一行中具有相同的高度。在一列中，所有单元格的宽度相同。但是所有的行和列并不一定是相同的高度或宽度。\n\n    wxFlexGridSizer(int rows, int cols, int vgap, int hgap)\n\n“行”和“列”指定大小分析器中的行和列数。Vgap和hgap在两个方向的小部件之间都添加了一些空间。\n\n很多时候，开发人员必须开发用于数据输入和修改的对话框。我发现wxFlexGridSizer适合这样的任务。开发人员可以很容易地用这个大小设置一个对话框窗口。也可以使用wxGridSizer来实现这一点，但看起来不太好，因为每个单元格都有相同的大小。\n\nflexgridsizer.h\n\n    #ifndef FLEXGRIDSIZER_FLEXGRIDSIZER_H\n    #define FLEXGRIDSIZER_FLEXGRIDSIZER_H\n    \n    #include \"wx/wx.h\"\n    \n    class FlexGridSizer : public wxFrame {\n    public:\n        FlexGridSizer(const wxString& title);\n    };\n    \n    \n    #endif //FLEXGRIDSIZER_FLEXGRIDSIZER_H\n\n\n\nflexgridsizer.cpp\n\n    #include \"flexgridsizer.h\"\n    \n    FlexGridSizer::FlexGridSizer(const wxString &title)\n        :wxFrame(nullptr, -1, title, wxPoint(-1, -1), wxSize(270, 220))\n    {\n        wxPanel* panel = new wxPanel(this, -1);\n        wxBoxSizer* hbox = new wxBoxSizer(wxHORIZONTAL);\n    \n        wxFlexGridSizer* fgs = new wxFlexGridSizer(3, 2, 9, 25);\n    \n        wxStaticText* thetitle = new wxStaticText(panel, -1, wxT(\"Title\"));\n        wxStaticText* author = new wxStaticText(panel, -1, wxT(\"Author\"));\n        wxStaticText* review = new wxStaticText(panel, -1, wxT(\"Review\"));\n    \n        wxTextCtrl* tc1 = new wxTextCtrl(panel, -1);\n        wxTextCtrl* tc2 = new wxTextCtrl(panel, -1);\n        wxTextCtrl* tc3 = new wxTextCtrl(panel, -1, wxT(\"\"), wxPoint(-1, -1), wxSize(-1, -1), wxTE_MULTILINE);\n    \n        fgs->Add(thetitle);\n        fgs->Add(tc1, 1, wxEXPAND);\n        fgs->Add(author);\n        fgs->Add(tc2, 1, wxEXPAND);\n        fgs->Add(review, 1, wxEXPAND);\n        fgs->Add(tc3, 1, wxEXPAND);\n    \n        fgs->AddGrowableRow(2, 1);\n        fgs->AddGrowableCol(1, 1);\n    \n        hbox->Add(fgs, 1, wxALL | wxEXPAND, 15);\n        panel->SetSizer(hbox);\n    \n        this->Center();\n    }\n\n\n\nmain.h\n\n    #ifndef FLEXGRIDSIZER_MAIN_H\n    #define FLEXGRIDSIZER_MAIN_H\n    \n    #include \"wx/wx.h\"\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //FLEXGRIDSIZER_MAIN_H\n\n\n\nmain.cpp\n\n    #include \"main.h\"\n    #include \"flexgridsizer.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        FlexGridSizer* frame = new FlexGridSizer(wxT(\"FlexGridSizer\"));\n        frame->Show(true);\n    \n        return wxAppConsoleBase::OnInit();\n    }\n\n\n\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(FlexGridSizer)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(${PROJECT_NAME} \n            main.cpp main.h\n            flexgridsizer.cpp\n            flexgridsizer.h)\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n        set_property(\n                TARGET ${PROJECT_NAME} PROPERTY\n                WIN32_EXECUTABLE true\n        )\n    endif ()\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n\n\n在我们的例子中，我们创建了一个简单的对话框。它可以用于向数据库中插入数据。\n\nwxBoxSizer *hbox =新的wxBoxSizer(wxHORIZONTAL);\n.．.\nhbox->Add(fgs, 1, wxALL |， wxEXPAND, 15);\n我们创建了一个水平的框大小，以便在小部件表周围放置一些空间(15px)。\n\nfgs->Add(thetitle);\n\n我们将小部件添加到大小器中，与gridsizer完全相同。\n\nfgs-> AddGrowableRow (2, 1);\nfgs-> AddGrowableCol (1,1);\n\n我们使第三行和第二列可增长。通过这种方式，我们可以使文本控件在窗口调整大小时增长。前两个文本控件将在水平方向上增长，第三个将在两个方向上增长。我们一定不要忘记使小部件可扩展(wxEXPAND)，以便使其真正工作。\n\n![image.png]({$WP_ASSETS}/1e1354d4b3f16a701c3c4d50e08245df.png)\n\nwxWidgets教程的这一部分专门介绍布局管理。\n\nmove.h\n\n    #ifndef MOVEEVENT_MOVE_H\n    #define MOVEEVENT_MOVE_H\n    \n    #include \"wx/wx.h\"\n    \n    class Move : public wxFrame {\n    public:\n        Move(const wxString& title);\n        void OnMove(wxMoveEvent& event);\n    \n        wxStaticText* st1;\n        wxStaticText* st2;\n    };\n    \n    \n    #endif //MOVEEVENT_MOVE_H\n\n\nmove.cpp\n\n    #include \"move.h\"\n    \n    Move::Move(const wxString &title)\n        :wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(250, 130))\n    {\n        wxPanel* panel = new wxPanel(this, -1);\n    \n        st1 = new wxStaticText(panel, -1, wxT(\"\"), wxPoint(10, 10));\n        st2 = new wxStaticText(panel, -1, wxT(\"\"), wxPoint(10, 30));\n    \n        this->Connect(wxEVT_MOVE, wxMoveEventHandler(Move::OnMove));\n        this->Center();\n    }\n    \n    void Move::OnMove(wxMoveEvent &event) {\n        wxPoint pt = event.GetPosition();\n        st1->SetLabel(wxString::Format(wxT(\"x: %d\"), pt.x));\n        st2->SetLabel(wxString::Format(wxT(\"y: %d\"), pt.y));\n    }\n\n\nmain.h\n\n    #ifndef MOVEEVENT_MAIN_H\n    #define MOVEEVENT_MAIN_H\n    \n    #include \"wx/wx.h\"\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //MOVEEVENT_MAIN_H\n\n\nmain.cpp\n\n    #include \"main.h\"\n    #include \"move.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        Move* frame = new Move(wxT(\"Move Event\"));\n        frame->Show(true);\n    \n        return true;\n    }\n\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(MoveEvent)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(MoveEvent main.cpp main.h move.cpp move.h)\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n        set_property(\n                TARGET ${PROJECT_NAME} PROPERTY\n                WIN32_EXECUTABLE true\n        )\n    endif ()\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n                           MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}                                           \n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n\n\n\n\n\n\n\n","edit_time_ms":1665127021068,"char_count":{"word":921,"char_without_spaces":5424,"char_with_spaces":7671},"snapshots":[{"id":"01gz65efd6qsqfef1abjebxk17","item_id":"01germsgz6s55najkqnn70tqsn","add_time_ms":1682760482214,"hash":"467edda9aab1ce5d6b8e8116d29cafa6","length":8016,"char_count_char_with_spaces":7671,"char_count_char_without_spaces":5424,"char_count_word":921}]}