{"id":"01jdc9y8xnrnasspskdxbc70z2","item_id":"01jdc8keekjzbar8g1r1xcn8wq","add_time_ms":1732358644661,"hash":"88483a2e96db0f4e72630f5a42f7d1b8","version_key":1,"full_content":"### 构建基础的服务API\n\nlocal skynet = require \"skynet\"\n\n--conf配置信息已经写入到注册表中，通过该函数获取注册表的变量值\nskynet.getenv(varName)\n\n--设置注册表信息：varName一般是number或者string，不能设置已经存在varName\nskynet.setenv(varName, varValue)\n\n--打印函数\nskynet.error(...)\n\n--使用func函数开启一个服务并将消息处理函数注册到C层\nskynet.start(func)\n\n--如果服务尚未初始化完成，注册一个函数等服务初始化阶段再执行；若服务已经初始化完成，则立刻运行该函数\nskynet.init(func)\n\n--结束当前服务\nskynet.exit()\n\n--获取当前服务的句柄\nskynet.self()\n\n--将handler转换成字符串\nskynet.address(handler)\n\n--退出skynet进程\nrequire \"skynet.manager\" \nskynet.abort()\n\n--强制杀死其他服务，不推荐这样做。因为对象毫无征兆的退出，可能会导致bug\nskynet.kill(address)\n\n","_id":"159"}