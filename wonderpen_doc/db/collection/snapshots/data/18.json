{"id":"01gz65efcfksynx6p4pgd88tdr","item_id":"01germnsfg6gz7vytqwdfzqh7j","add_time_ms":1682760482191,"hash":"fdb1b88f184e87c1fec5224c0660ab85","full_content":"\nwxBoxSizer\n\nwxBoxSizer使我们能够将几个小部件放入一行或一列中。我们可以将另一个尺寸器放入现有的尺寸器中。这样我们就可以创建非常复杂的布局。\n    \n    \\wxBoxSizer(int orient)\n    wxSizerItem* Add(wxWindow* window, int proportion = 0, int flag = 0, int border = 0)\n\n方向可以是wxVERTICAL或wxHORIZONTAL。向wxBoxSizer添加小部件是通过Add方法完成的。为了理解它，我们需要看看它的参数。\n\n比例参数定义了小部件在已定义方向上的变化比例。让我们假设我们有比例为0、1和2的树按钮。它们被添加到水平wxBoxSizer中。比例为0的按钮不会改变。比例为2的按钮在水平方向上的变化比比例为1的按钮多两倍。\n\n通过flag参数，您可以进一步在wxBoxSizer中配置小部件的行为。我们可以控制小部件之间的边界。我们在小部件之间以像素为单位添加一些空间。为了应用边界，我们需要定义将使用边界的边。我们可以将它们与|操作符结合使用，例如wxLEFT | wxBOTTOM。我们可以在以下旗帜中选择:\n\nwxLEFT\nwxRIGHT\nwxBOTTOM\nwxTOP\nwxALL\n\n\nboxsizer.h\n\n    #ifndef BOXSIZER_BOXSIZER_H\n    #define BOXSIZER_BOXSIZER_H\n    \n    #include \"wx/wx.h\"\n    \n    class BoxSizer : public wxFrame {\n    public:\n        BoxSizer(const wxString& title);\n    \n    };\n    \n    #endif //BOXSIZER_BOXSIZER_H\n\n\nboxsizer.cpp\n\n    #include \"boxsizer.h\"\n    \n    BoxSizer::BoxSizer(const wxString &title)\n        :wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(250, 150))\n    {\n        wxColour col1, col2;\n        col1.Set(wxT(\"#4f5049\"));\n        col2.Set(wxT(\"#ededed\"));\n    \n        wxPanel* panel = new wxPanel(this, -1);\n        panel->SetBackgroundColour(col1);\n    \n        wxBoxSizer* vbox = new wxBoxSizer(wxVERTICAL);\n        panel->SetSizer(vbox);\n    \n        wxPanel* midPanel = new wxPanel(panel, wxID_ANY);\n        midPanel->SetBackgroundColour(col2);\n        vbox->Add(midPanel, 1, wxEXPAND | wxALL, 20);\n    \n        this->Center();\n    }\n\n\n\nmain.h\n\n    #ifndef BOXSIZER_MAIN_H\n    #define BOXSIZER_MAIN_H\n    \n    #include \"wx/wx.h\"\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //BOXSIZER_MAIN_H\n\n\nmain.cpp\n\n    #include \"main.h\"\n    #include \"boxsizer.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        BoxSizer* frame = new BoxSizer(wxT(\"BoxSizer\"));\n        frame->Show(true);\n    \n        return true;\n    }\n\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(BoxSizer)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(\n            ${PROJECT_NAME}\n            main.h main.cpp\n            boxsizer.h boxsizer.cpp\n            )\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n            set_property(\n                    TARGET ${PROJECT_NAME} PROPERTY\n                    WIN32_EXECUTABLE true\n            )\n    endif ()\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n在本例中，我们创建了两个面板。第二个面板周围有一些空间。\n    vbox->Add(midPan, 1, wxEXPAND |， wxALL, 20);\n    \n我们在midPan面板周围放置了一个20px的边框。wxALL标志应用于所有四个边的边界大小。如果我们使用wxEXPAND标志，则小部件将使用分配给它的所有空间。\n\n最后，我们还可以定义小部件的对齐方式。我们用以下标志来做:\n    \n    wxALIGN_LEFT\n    wxALIGN_RIGHT\n    wxALIGN_TOP\n    wxALIGN_BOTTOM\n    wxALIGN_CENTER_VERTICAL\n    wxALIGN_CENTER_HORIZONTAL\n    wxALIGN_CENTER\n\n假设我们想在窗口的右下角放置两个按钮。\n\nalignment.h\n\n    #ifndef ALIGNMENT_ALIGNMENT_H\n    #define ALIGNMENT_ALIGNMENT_H\n    \n    #include \"wx/wx.h\"\n    \n    class Alignment : public wxFrame {\n    public:\n        Alignment(const wxString& title);\n    };\n    \n    #endif //ALIGNMENT_ALIGNMENT_H\n\n\n\nalignment.cpp\n\n    #include \"alignment.h\"\n    \n    Alignment::Alignment(const wxString &title)\n        :wxFrame(nullptr, -1, title, wxPoint(-1, -1), wxSize(300, 200))\n    {\n        wxPanel* panel = new wxPanel(this, -1);\n    \n        wxBoxSizer* vbox = new wxBoxSizer(wxVERTICAL);\n        wxBoxSizer* hbox1 = new wxBoxSizer(wxHORIZONTAL);\n        wxBoxSizer* hbox2 = new wxBoxSizer(wxHORIZONTAL);\n    \n        wxButton* ok = new wxButton(panel, -1, wxT(\"OK\"));\n        wxButton* cancel = new wxButton(panel, -1, wxT(\"Cancel\"));\n    \n        hbox1->Add(new wxPanel(panel, -1));\n        vbox->Add(hbox1, 1, wxEXPAND);\n    \n        hbox2->Add(ok);\n        hbox2->Add(cancel);\n    \n        vbox->Add(hbox2, 0, wxALIGN_RIGHT | wxRIGHT | wxBOTTOM, 10);\n        panel->SetSizer(vbox);\n    \n        this->Center();\n    }\n\n\n\nmain.h\n\n    #ifndef ALIGNMENT_MAIN_H\n    #define ALIGNMENT_MAIN_H\n    \n    #include \"wx/wx.h\"\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    #endif //ALIGNMENT_MAIN_H\n    \n    \nmain.cpp\n\n    #include \"main.h\"\n    #include \"alignment.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        Alignment* frame = new Alignment(wxT(\"Alignment\"));\n        frame->Show(true);\n    \n        return wxAppConsoleBase::OnInit();\n    }\n    \n    \n    \n    \nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(Alignment)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n            -DUNICODE=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(${PROJECT_NAME}\n            main.h main.cpp\n            alignment.h alignment.cpp\n            )\n    \n    if (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n        set_property(\n                TARGET ${PROJECT_NAME} PROPERTY\n                WIN32_EXECUTABLE true\n        )\n    endif ()\n    \n    set_property(\n            TARGET ${PROJECT_NAME} PROPERTY\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n\n\n我们创建了三个大小器。一个垂直大小和两个水平大小。我们把这两个水平大小的放到垂直大小的里面。\n    \n    hbox1->Add(new wxPanel(panel, -1));\n    vbox->Add(hbox1, 1, wxEXPAND);\n\n我们在第一个水平尺寸器中放入一个wxPanel。我们将比例设置为1，并设置wxEXPAND标志。这样，size将占用除hbox2之外的所有空间。\n\n    vbox->Add(hbox2, 0, wxALIGN_RIGHT | wxRIGHT | wxBOTTOM, 10);\n\n我们已经将按钮放置到hbox2大小中。hbox2是右对齐的，我们还在按钮的底部和右边留出了一些空间。\n\n![image.png]({$WP_ASSETS}/b2c857758210f83ffd2eec51552a5265.png)\n\n","_id":"18"}