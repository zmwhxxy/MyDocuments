{"id":"01jdgkvgt4tv71bytxv8vcpvbe","item_id":"01jdgkcbxw21tc051q2p9s54a4","add_time_ms":1732503257924,"hash":"e37c49d4f89c1af43b3403b124219c95","version_key":1,"full_content":"### 初始化函数\n\n#### 编写test_init.lua文件\n在开启一个服务前可以使用skynet.init函数进行一些初始化工作。使用实例如下：\n    \n    local skynet = require(\"skynet\")\n\n    -- init函数：在启动服务前进行一些初始化工作\n    skynet.init(function() \n        skynet.error(\"服务的初始化工作\")\n    end)\n\n    -- 启动服务\n    skynet.start(function()\n        skynet.error(\"服务开始启动\")\n    end)\n    \n    \n #### 执行test_init服务\n\n在linux终端中执行以下命令：\n        ./skynet ./project/test_init_cf\n \n 执行成功后终端打印如下内容：\n    [:01000002] LAUNCH snlua bootstrap\n    [:01000003] LAUNCH snlua launcher\n    [:01000004] LAUNCH snlua cmaster\n    [:01000004] master listen socket 0.0.0.0:2024\n    [:01000005] LAUNCH snlua cslave\n    [:01000005] slave connect to master 127.0.0.1:2024\n    [:01000004] connect from 127.0.0.1:48450 4\n    [:01000006] LAUNCH harbor 1 16777221\n    [:01000004] Harbor 1 (fd=4) report 127.0.0.1:2511\n    [:01000005] Waiting for 0 harbors\n    [:01000005] Shakehand ready\n    [:01000007] LAUNCH snlua datacenterd\n    [:01000008] LAUNCH snlua service_mgr\n    [:01000009] LAUNCH snlua test_init\n    [:01000009] 服务的初始化工作\n    [:01000009] 服务开始启动\n    [:01000002] KILL self","_id":"168"}