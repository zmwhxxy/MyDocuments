{"id":"01hwf3vb2j3237kwb4ct1pvd31","add_time_ms":1714199309394,"icon":"book","type":"doc","title":"skynet.socket","_id":"166","char_count":{"word":329,"char_without_spaces":600,"char_with_spaces":616,"char_all":634},"content":"在 Skynet 中，skynet.socket 是用于处理网络通信的模块。它提供了一系列函数来创建、连接、发送和接收网络数据的能力。\n\n以下是一些常见的 skynet.socket 操作：\n\nskynet.socket.listen(address, port)：创建一个监听指定地址和端口的服务器套接字，并返回该套接字的句柄。\nskynet.socket.start(id, address, port)：启动一个套接字并开始监听指定地址和端口。id 是套接字的句柄，由 skynet.socket.listen 返回。\nskynet.socket.bind(fd)：将一个已存在的套接字绑定到当前服务中，使得当前服务可以处理该套接字的消息。\nskynet.socket.connect(address, port)：创建一个连接到指定地址和端口的客户端套接字，并返回该套接字的句柄。\nskynet.socket.write(id, data)：向指定套接字发送数据。\nskynet.socket.read(id, size)：从指定套接字读取数据，最多读取指定大小的字节数。\nskynet.socket.close(id)：关闭指定套接字。\nskynet.socket.shutdown(id)：关闭指定套接字的写入端，表示不再发送数据。\n这些函数使得 Skynet 可以在服务中方便地进行网络通信，从而构建各种网络应用程序，如网络服务器、客户端等。\n\n\n\n\n\n","edit_time_ms":1714199389610,"snapshots":[{"id":"01jdc8smryjn42xtc5462wjzyd","item_id":"01hwf3vb2j3237kwb4ct1pvd31","add_time_ms":1732357444382,"hash":"f8d0d0a331188aca3c119dc45dbe596a","length":634,"char_count_char_with_spaces":616,"char_count_char_without_spaces":600,"char_count_word":329,"version_key":1}]}