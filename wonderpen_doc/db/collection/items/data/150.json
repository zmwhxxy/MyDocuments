{"id":"01hvta7bv1d4txymgxyr0c1na4","add_time_ms":1713501351777,"icon":"book","type":"doc","_id":"150","char_count":{"word":437,"char_without_spaces":687,"char_with_spaces":700,"char_all":730},"title":"python创建虚拟环境","content":"# Python3 venv简单使用——创建虚拟环境\n\n在使用Python的时候，有的时候又希望安装的相关依赖不影响原来的系统配置。这个时候就需要用到venv（Virtualenv）创建虚拟的Python环境，以供使用。（像我是因为对服务器没有权限，没有办法直接通过pip安装，只能采用这样迂回的办法。）\n\n本来我已经知道了有Virtualenv这种东西。但是这个东西需要安装，而我没有权限安装。这就是一个死循环。后来在查资料的时候，意外发现Python3自带了venv，而且可以直接代替Virtualenv。\n\n需要注意的是，在Python3.3中使用”venv”命令创建的环境不包含”pip”，你需要进行手动安装。但是只有版本在3.3之上都没有问题啦。\n\n首先，我们先在某个目录下（最后是根目录或者是桌面，关键是下次要用能够找得到），输入：\n\n$ python -m venv XXX\nXXX指你要创建的文件名。因为在执行这行命令之后，就会把与Python虚拟环境有关的文件放到XXX里面。\n\n之后只需要运行这个里面的activate文件就行。Linux下的命令如下：\n\n$ source <XXX>/bin/activate\nWindows的cmd下是：\n\nC:> <XXX>/Scripts/activate.bat\n在PowerShell下是：\n\nPS C:> <venv>/Scripts/Activate.ps1\n但是为了避免运行不信任的脚本，PowerShell下此脚本可能被禁止。此时输入命令：\n\nset-executionpolicy remotesigned\n然后更改执行策略就可以了。\n\n退出环境之前输入：\n\n$ deactivate\n","edit_time_ms":1713501417704}