{"id":"01g8mw981z024f0fhdy23z0x3c","add_time_ms":1658558128191,"icon":"book","type":"doc","title":"菜单","_id":"18","content":"菜单栏是GUI应用程序中最可见的部分之一。它是位于各种菜单中的一组命令。在控制台应用程序中，您必须记住所有那些神秘的命令，而在这里，我们将大多数命令分组为逻辑部分。有一些公认的标准可以进一步减少学习新应用的时间。要在wxWidgets中实现菜单栏，我们需要有三个类:wxMenuBar、wxMenu和wxMenuItem。\n\n在wxWidgets中创建菜单栏非常简单下面展示一个简单的示例。\n\n\n\nMenuFrame.h\n\n    #ifndef MENUS_MENUFRAME_H\n    #define MENUS_MENUFRAME_H\n    \n    #include \"wx/wx.h\"\n    \n    class MenuFrame : public wxFrame {\n    public:\n        MenuFrame(const wxString& title);\n        void OnQuit(wxCommandEvent& event);\n    \n    private:\n         wxMenuBar* menubar;\n        wxMenu* file;\n        wxMenu* imp;\n        wxMenuItem* quit;\n    };\n    \n    \n    #endif //MENUS_MENUFRAME_H\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \n\n\nMenuFrame.cpp\n\n      #include \"MenuFrame.h\"\n\n    MenuFrame::MenuFrame(const wxString &title)\n        :wxFrame(nullptr, wxID_ANY, title, wxDefaultPosition, wxSize(280, 180))\n    {\n//    新建File菜单\n    file = new wxMenu;\n\n//    添加菜单项\n    file->Append(wxID_ANY, wxT(\"&New\"));\n    file->Append(wxID_ANY, wxT(\"&Open\"));\n    file->Append(wxID_ANY, wxT(\"&Save\"));\n    file->AppendSeparator();\n\n//    新建Import菜单\n    imp = new wxMenu;\n    imp->Append(wxID_ANY, wxT(\"Import newsfeed list...\"));\n    imp->Append(wxID_ANY, wxT(\"Import bookmarks...\"));\n    imp->Append(wxID_ANY, wxT(\"Import mail...\"));\n\n//  添加一个子菜单\n    file->AppendSubMenu(imp, wxT(\"I&mport\"));\n\n    quit = new wxMenuItem(file, wxID_EXIT, wxT(\"&Quit\\tCtrl+w\"));\n    file->Append(quit);\n\n    menubar = new wxMenuBar;\n    menubar->Append(file, wxT(\"&File\"));\n    this->SetMenuBar(menubar);\n\n//  菜单添加响应事件\n    this->Connect(wxID_EXIT, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MenuFrame::OnQuit));\n\n    this->Center();\n    }\n\n    void MenuFrame::OnQuit(wxCommandEvent &event) {\n        this->Close(true);\n    }\n\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \n\nMyApp.h\n\n    #ifndef MENUS_MYAPP_H\n    #define MENUS_MYAPP_H\n    \n    #include <wx/wx.h>\n    \n    class MyApp : public wxApp {\n    public:\n        virtual bool OnInit();\n    };\n    \n    \n    #endif //MENUS_MYAPP_H\n\n/*------------------------------------------------------------------------------------------------------------------*/\n\n\n/*------------------------------------------------------------------------------------------------------------------*/　　　    \n\nMyApp.cpp\n\n    #include \"MyApp.h\"\n    #include \"MenuFrame.h\"\n    \n    wxIMPLEMENT_APP(MyApp);\n    \n    bool MyApp::OnInit() {\n        MenuFrame* frame = new MenuFrame(wxT(\"Menu Frame\"));\n        frame->Show(true);\n    \n        return true;\n    }\n\n\n![image.png]({$WP_ASSETS}/95f2c7fe4059e66b0e4fe244f939227e.png)\n\n\n之后，我们将一个菜单附加到菜单栏中。&字符创建一个加速键。&后面的字符加下划线。这样就可以通过Alt+F快捷键来访问菜单。最后，我们调用SetMenuBar方法。此方法属于wxFrame小部件。它设置菜单栏。","edit_time_ms":1658571263050,"snapshots":[],"char_count":{"word":415,"char_without_spaces":2502,"char_with_spaces":2935}}