{"id":"01gexqspbhv44x0phywrz1cpsb","add_time_ms":1665297865073,"icon":"book","type":"doc","title":"开关按钮","_id":"54","content":"开关按钮\n\n  wxToggleButton是一个有两种状态的按钮:按下和未按下。可以通过点击它来切换这两个状态。在某些情况下，这种功能非常适合。\n\ntogglebutton.h\n\n    #include <wx/wx.h>\n    #include <wx/tglbtn.h>\n    class ToggleButton : public wxFrame\n    {\n    public:\n     ToggleButton(const wxString& title);\n     void OnToggleRed(wxCommandEvent& event);\n     void OnToggleGreen(wxCommandEvent& event);\n     void OnToggleBlue(wxCommandEvent& event);\n    protected:\n     wxToggleButton *m_tgbutton1;\n     wxToggleButton *m_tgbutton2;\n     wxToggleButton *m_tgbutton3;\n     wxPanel *m_panel;\n     wxColour *colour;\n    };\n    const int ID_TGBUTTON1 = 101;\n    const int ID_TGBUTTON2 = 102;\n    const int ID_TGBUTTON3 = 103;\n    togglebutton.cpp\n    #include \"togglebutton.h\"\n    ToggleButton::ToggleButton(const wxString& title)\n     : wxFrame(NULL, wxID_ANY, title, wxDefaultPosition, wxSize(280, 180))\n    {\n     wxPanel *panel = new wxPanel(this, wxID_ANY);\n     colour = new wxColour(0, 0, 0);\n     m_tgbutton1 = new wxToggleButton(panel, ID_TGBUTTON1, \n     wxT(\"Red\"), wxPoint(20, 20));\n     m_tgbutton2 = new wxToggleButton(panel, ID_TGBUTTON2, \n     wxT(\"Green\"), wxPoint(20, 70));\n     m_tgbutton3 = new wxToggleButton(panel, ID_TGBUTTON3, \n     wxT(\"Blue\"), wxPoint(20, 120));\n     Connect(ID_TGBUTTON1, wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, \n     wxCommandEventHandler(ToggleButton::OnToggleRed));\n     Connect(ID_TGBUTTON2, wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, \n     wxCommandEventHandler(ToggleButton::OnToggleGreen));\n     Connect(ID_TGBUTTON3, wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, \n     wxCommandEventHandler(ToggleButton::OnToggleBlue));\n     m_panel = new wxPanel(panel, wxID_NEW, wxPoint(150, 20), \n     wxSize(110, 110), wxSUNKEN_BORDER);\n     m_panel->SetBackgroundColour(colour->GetAsString());\n    }\n    void ToggleButton::OnToggleRed(wxCommandEvent& WXUNUSED(event))\n    {\n     unsigned char green = colour->Green(); \n     unsigned char blue = colour->Blue(); \n     if ( colour->Red() ) {\n     colour->Set(0, green, blue);\n     } else { \n     colour->Set(255, green, blue);\n     }\n     m_panel->SetBackgroundColour(colour->GetAsString());\n    }\n    void ToggleButton::OnToggleGreen(wxCommandEvent& WXUNUSED(event))\n    {\n     unsigned char red = colour->Red(); \n     unsigned char blue = colour->Blue(); \n     if ( colour->Green() ) {\n     colour->Set(red, 0, blue);\n     } else { \n     colour->Set(red, 255, blue);\n     }\n     m_panel->SetBackgroundColour(colour->GetAsString());\n    }\n    void ToggleButton::OnToggleBlue(wxCommandEvent& WXUNUSED(event))\n    {\n     unsigned char red = colour->Red(); \n     unsigned char green = colour->Green(); \n     if ( colour->Blue() ) {\n     colour->Set(red, green, 0);\n     } else { \n     colour->Set(red, green, 255);\n     }\n     m_panel->SetBackgroundColour(colour->GetAsString());\n    }\n\nmain.h\n\n    #include <wx/wx.h>\n    class MyApp : public wxApp\n    {\n     public:\n     virtual bool OnInit();\n    };\n\nmain.cpp\n\n    #include \"main.h\"\n    #include \"togglebutton.h\"\n    \n    IMPLEMENT_APP(MyApp)\n    \n    bool MyApp::OnInit()\n    {\n     ToggleButton *button = new ToggleButton(wxT(\"ToggleButton\"));\n     button->Centre();\n     button->Show(true);\n     return true;\n    }\n\nCMakeLists.txt\n\n    cmake_minimum_required(VERSION 3.16)\n    project(ToggleButton)\n    \n    set(CMAKE_CXX_STANDARD 14)\n    \n    add_definitions(\n            -DwxMSVC_VERSION_AUTO=1\n            -DwxMSVC_VERSION_COMPAT=1\n    )\n    \n    include_directories(\n            $ENV{WXWIN}/include\n            $ENV{WXWIN}/lib/vc14x_lib/mswud\n    )\n    \n    link_directories(\n            $ENV{WXWIN}/lib/vc14x_lib\n    )\n    \n    add_executable(\n            ${PROJECT_NAME}\n            main.cpp main.h\n            togglebutton.cpp togglebutton.h)\n    \n    set_target_properties(\n            ${PROJECT_NAME}\n                PROPERTIES\n            MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\"\n            WIN32_EXECUTABLE true\n    )\n    \n    target_link_libraries(\n            ${PROJECT_NAME}\n            shlwapi.lib\n            version.lib\n            comctl32.lib\n            rpcrt4.lib\n            ws2_32.lib\n            wininet.lib\n            winmm.lib\n            wxmsw32ud_gl.lib\n            wxmsw32ud_stc.lib\n            wxmsw32ud_richtext.lib\n            wxmsw32ud_propgrid.lib\n            wxmsw32ud_ribbon.lib\n            wxmsw32ud_aui.lib\n            wxmsw32ud_xrc.lib\n            wxbase32ud_xml.lib\n            wxmsw32ud_qa.lib\n            wxmsw32ud_webview.lib\n            wxmsw32ud_html.lib\n            wxmsw32ud_media.lib\n            wxmsw32ud_adv.lib\n            wxmsw32ud_core.lib\n            wxbase32ud_net.lib\n            wxbase32ud.lib\n            wxscintillad.lib\n            wxexpatd.lib\n            wxtiffd.lib\n            wxjpegd.lib\n            wxpngd.lib\n            wxzlibd.lib\n            wxregexud.lib\n            wxmsw32u_gl.lib\n    )\n\n","edit_time_ms":1665455480304,"char_count":{"word":369,"char_without_spaces":3436,"char_with_spaces":4659},"snapshots":[{"id":"01gz65efetbtfta75p47p9ar7s","item_id":"01gexqspbhv44x0phywrz1cpsb","add_time_ms":1682760482266,"hash":"9973ba3bbd1e93de26f43f2f5a323a71","length":4833,"char_count_char_with_spaces":4659,"char_count_char_without_spaces":3436,"char_count_word":369}]}