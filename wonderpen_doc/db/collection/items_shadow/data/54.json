{"id":"01hwcwz4axb3yx0kbte2wb1999","add_time_ms":1714124984670,"type":"doc","title":"普通服务和全局唯一服务","_id":"54","char_count":{"word":0,"char_without_spaces":0,"char_with_spaces":0,"char_all":0},"content":"在Lua中，Skynet是一个基于事件驱动的轻量级网络框架，用于构建高性能的分布式应用程序。Skynet中有两种不同类型的服务：普通服务和全局唯一服务。\n\n普通服务：\n普通服务是Skynet中最基本的服务类型，每个普通服务都有一个唯一的服务ID，可以通过该ID来进行通信和管理。\n普通服务在启动时可以指定一个服务名字，但这个名字只在启动过程中有用，用来方便调试和查看，之后服务将通过唯一的服务ID来标识自己。\n普通服务的生命周期由Skynet管理，可以在需要时动态创建和销毁，但在同一个节点上可以存在多个相同类型的普通服务实例。\n全局唯一服务：\n全局唯一服务是一种特殊类型的服务，与普通服务不同，全局唯一服务在整个Skynet集群中只有一个实例，具有唯一的服务ID。\n全局唯一服务通常用于全局的配置、管理或其他需要全局共享的任务。\n全局唯一服务的实现需要保证在整个Skynet集群中只有一个实例在运行，通常使用Skynet提供的分布式锁等机制来实现。\n下面是一些示例代码，演示如何在Skynet中创建普通服务和全局唯一服务：\n\nlua\nCopy code\n-- 普通服务示例代码\nlocal skynet = require \"skynet\"\n\nlocal function normal_service()\n    skynet.start(function()\n        skynet.error(\"Normal service started, my service ID is\", skynet.self())\n\n        -- 通常服务的业务逻辑\n    end)\nend\n\nskynet.start(function()\n    skynet.error(\"Starting normal service...\")\n    skynet.newservice(\"normal_service\") -- 启动一个普通服务\nend)\nlua\nCopy code\n-- 全局唯一服务示例代码\nlocal skynet = require \"skynet\"\n\nlocal function global_unique_service()\n    skynet.start(function()\n        skynet.error(\"Global unique service started, my service ID is\", skynet.self())\n\n        -- 全局唯一服务的业务逻辑\n    end)\nend\n\nskynet.start(function()\n    skynet.error(\"Starting global unique service...\")\n    skynet.newservice(\"global_unique_service\", \"unique_service\") -- 启动一个全局唯一服务，指定服务名字为\"unique_service\"\nend)\n在实际应用中，需要根据具体的需求选择合适的服务类型。普通服务适用于需要在集群中多个节点上运行多个实例的场景，而全局唯一服务适用于需要在整个集群中只有一个实例的场景。","edit_time_ms":1714125013847}